                 
_____Packet Sniffer______
   
=============
Instructions:
=============

 Develop a packet sniffer tool that captures and analyzes network packets. Display relevant information such as source and destination IP address, protocols, and payload data. Ensure the ethical use of the tool for educational purposes.



=============
Python Script:
=============

 from scapy.all import sniff
from scapy.layers.inet import IP, TCP, UDP
import logging

# Suppress Scapy's warnings
logging.getLogger("scapy.runtime").setLevel(logging.ERROR)

def packet_callback(packet):
    if IP in packet:
        ip_layer = packet[IP]
        src_ip = ip_layer.src
        dst_ip = ip_layer.dst
        protocol = ip_layer.proto
        
        # Determine the transport layer protocol
        transport_layer = None
        if TCP in packet:
            transport_layer = packet[TCP]
            protocol_name = "TCP"
        elif UDP in packet:
            transport_layer = packet[UDP]
            protocol_name = "UDP"
        else:
            protocol_name = "Other"
        
        print(f"IP Packet: {src_ip} -> {dst_ip} | Protocol: {protocol_name}")
        
        if transport_layer:
            print(f"Source Port: {transport_layer.sport} | Destination Port: {transport_layer.dport}")
        
        if hasattr(packet, 'payload'):
            print(f"Payload: {bytes(packet.payload)}")
        print("-" * 80)

def main():
    print("Starting packet sniffer...")
    sniff(prn=packet_callback, store=0)

if _name_ == "_main_":
    main()


=============
 Explanation::
=============

1. Imports and Logging: The script imports necessary modules from Scapy and sets the logging level to suppress warnings.

2. Packet Callback Function: The packet callback function is called for each captured packet. It extracts the IP layer information (source and destination IPs, protocol), checks for TCP or UDP protocols, and prints relevant information.

3. Sniff Function: The sniff function captures packets. The prn parameter specifies the callback function, and store=0 ensures packets are not stored in memory.

4. Main Function: The main function starts the sniffer.


=============
 Key Notes::
=============

1. To install SCapy on terminal initiate --- “pip install scapy”

2. Remove the "if" statement to run the programme.

3. Download and Install WinPcap ----link: https://www.winpcap.org/install/.

4. Make sure to aligne "main()" at the far left end.

5. Run the program.
